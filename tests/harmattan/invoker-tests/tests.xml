<?xml version="1.0" encoding="ISO-8859-1"?>
<testdefinition version="0.1">

<!-- Test suite, name mandatory - the same as test package name -->
  <!-- Schema: https://projects.maemo.org/docs/testing/xml-definition.html -->
  <suite name="applauncherd-invoker-tests" domain="Application framework"> 

    <set name="TC_Invoker" description="Tests for invoker" feature="AF Basic Launcher daemon support" requirement="300168">
      <pre_steps>
          <step>source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py stop_daemons</step>
          <step>/usr/bin/waitloadavg.rb -l 1.0 -p 1.0 -t 120</step>
          <step>touch /root/.itm</step> <!--Enable test mode for invoker -->
      </pre_steps>

      <case name="applauncherd__test_oom_adj_minus_two" type="Functional" description="Test that oom.adj is -1 for launched application process when using invokers -o parameter" timeout="360" level="System" insignificant="false">
        <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_oom_adj_minus_two</step>
      </case>

      <case name="applauncherd__test_signal_forwarding" type="Functional" description="To Test that invoker is killed by the same signal as the application" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_signal_forwarding</step>
      </case>

      <case name="applauncherd__test_invoker_delay" type="Functional" description="Test that invokers --delay parameter works" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_invoker_delay</step>
      </case>

      <case name="applauncherd__test_invoker_usage_printing" type="Functional" description="Test that applauncherd invoker --help usage printing ok" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_invoker_usage_printing</step>
      </case>

      <case name="applauncherd__test_invoker_help_printing" type="Functional" description="Test that applauncherd invoker ,help usage printing ok" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_invoker_help_printing</step>
      </case>

      <case name="applauncherd__test_invoker_search_prog" type="Functional" description="Test that invoker finds binaries from PATH" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_invoker_search_prog</step>
      </case>


      <case name="applauncherd__test_invoker_exit_status" type="Functional" description="To test that invoker returns the same exit status as the application" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_invoker_exit_status</step>
      </case>

      <case name="applauncherd__test_invoker_gid_uid" type="Functional" description="To Test that the set gid and uid is passed from invoker process to launcher" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_invoker_gid_uid</step>
      </case>

      <case name="applauncherd__test_launch_wo_applauncherd" type="Functional" description="Test invoker cannot launch applications when applauncherd is not running" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_launch_wo_applauncherd</step>
      </case>
      <case name="applauncherd__test_invoker_signal_forward" type="Functional" description="Test that UNIX signals are forwarded from invoker to the invoked process" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_invoker_signal_forward</step>
      </case>
      <case name="applauncherd__test_wrong_type" type="Functional" description="Test that invoker help is printed if application is invoked using a wrong type" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_wrong_type</step>
      </case>
      <case name="applauncherd__test_unknown_parameter" type="Functional" description="Test that help is printed if unknown parameter is passed to invoker" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_unknown_parameter</step>
      </case>
      <case name="applauncherd__test_non_existing_binary_launch" type="Functional" description="Test that invoker gives error when it tries to launch a binary that does not exist" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_non_existing_binary_launch</step>
      </case>
      <case name="applauncherd__test_invoker_symlink" type="Functional" description="Test that the symlink of invoker is unable to launch applications" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_invoker_symlink</step>
      </case>
      <case name="applauncherd__test_app_link" type="Functional" description="Test that symlink of an application can be launched." timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_app_link</step>
      </case>
      <case name="applauncherd__test_D_and_G_option" type="Functional" description="Test that -D and -G options work and applications are launcherd" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_D_and_G_option</step>
      </case>
      <case name="applauncherd__test_app_directory" type="Functional" description="Test that invoker is unable to launch an application which is a directory" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_app_directory</step>
      </case>
      <case name="applauncherd__test_unsetPATH_launch" type="Functional" description="Test that invoker is unable to launch an application when PATH env is unset" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_unsetPATH_launch</step>
      </case>
      <case name="applauncherd__test_invoker_wait_term" type="Functional" description="Test that invoker waits for the application to exit" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_invoker_wait_term</step>
      </case>
      <case name="applauncherd__test_relative_path_search" type="Functional" description="Test that invoker searches the application through relative path" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_relative_path_search</step>
      </case>
      <case name="applauncherd__test_invoker_param_creds" type="Functional" description="test invoker --creds" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_invoker_param_creds</step>
      </case>

      <case name="applauncherd__test_invoker_param_respawn_delay" type="Functional" description="test invoker --respawn" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_invoker_param_respawn_delay</step>
      </case>

      <case name="applauncherd__test_invoker_bogus_apptype" type="Functional" description="test giving bogus apptype to invoker" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_invoker_bogus_apptype</step>
      </case>

      <case name="applauncherd__test_invoker_applauncherd_dies" type="Functional" description="test invoker kills app if applauncherd dies" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_invoker_applauncherd_dies</step>
      </case>

      <case name="applauncherd__test_invoker_dbus_security" type="Functional" description="Test that invoker doesn't allow not-privileged application to re-use restricted d-bus connection opened by m-booster" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_invoker_dbus_security</step>
      </case>

      <case name="applauncherd__test_invoker_test_mode" type="Functional" description="Test that invoker test mode is disabled if test mode control file doesn't exist." timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0 `pyversions -d` /usr/share/applauncherd-testscripts/test-invoker.py test_invoker_test_mode</step>
      </case>

      <post_steps>
          <step>source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py start_daemons</step>
          <step>rm -f /root/.itm</step> <!--Disable test mode for invoker -->
      </post_steps>

      <environments>
          <scratchbox>false</scratchbox>
          <hardware>true</hardware>    
      </environments>

    </set>

      <!-- Single Instance Tests (without invoker) -->
    <set name="TC_SingleInstance_No_Invoker" description="functional tests for single instance without invoker" feature="AF Basic Launcher daemon support" requirement="300168">   
      <pre_steps>
          <step>source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py stop_daemons</step>
          <step>/usr/bin/waitloadavg.rb -l 1.0 -p 1.0 -t 120</step>
          <step>touch /root/.itm</step> <!--Enable test mode for invoker -->
      </pre_steps>

      <case name="applauncherd__test_single_instance_window_raise_wo_invoker" type="Functional" description="Test basic single instance functionality and window raising" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-single-instance.py test_single_instance_window_raise_without_invoker</step>
      </case>

      <case name="applauncherd__test_single_instance_and_non_single_instance_wo_invoker" type="Functional" description="Test that there's multiple instances when starting app w/o single-instance" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-single-instance.py test_single_instance_and_non_single_instance_without_invoker</step>
      </case>

      <case name="applauncherd__test_single_instance_stress_test_wo_invoker" type="Functional" description="Try starting apps fast with single-instance" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-single-instance.py test_single_instance_stress_test_without_invoker</step>
      </case>

      <case name="applauncherd__test_single_instance_abnormal_lock_release_wo_invoker" type="Functional" description="Try starting an app, killing it and starting it again checking that the pid has changed" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-single-instance.py test_single_instance_abnormal_lock_release_without_invoker</step>
      </case>
      <post_steps>
          <step>source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py start_daemons</step>
          <step>rm -f /root/.itm</step> <!--Disable test mode for invoker -->
      </post_steps>
      <environments>
          <scratchbox>false</scratchbox>
          <hardware>true</hardware>    
      </environments>
    </set>

      <!-- Single Instance Tests (with invoker) -->
    <set name="TC_SingleInstance_Invoker" description="functional tests for single instance with invoker" feature="AF Basic Launcher daemon support" requirement="300168">   
      <pre_steps>
          <step>source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py stop_daemons</step>
          <step>/usr/bin/waitloadavg.rb -l 1.0 -p 1.0 -t 120</step>
          <step>touch /root/.itm</step> <!--Enable test mode for invoker -->
      </pre_steps>

      <case name="applauncherd__test_single_instance_window_raise_w_invoker" type="Functional" description="Test basic single instance functionality and window raising" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-single-instance.py test_single_instance_window_raise_with_invoker</step>
      </case>

      <case name="applauncherd__test_single_instance_and_non_single_instance_w_invoker" type="Functional" description="Test that there's multiple instances when starting app w/o single-instance" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-single-instance.py test_single_instance_and_non_single_instance_with_invoker</step>
      </case>

      <case name="applauncherd__test_single_instance_stress_test_w_invoker" type="Functional" description="Try starting apps fast with single-instance" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-single-instance.py test_single_instance_stress_test_with_invoker</step>
      </case>

      <case name="applauncherd__test_single_instance_abnormal_lock_release_w_invoker" type="Functional" description="Try starting an app, killing it and starting it again checking that the pid has changed" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-single-instance.py test_single_instance_abnormal_lock_release_with_invoker</step>
      </case>

      <case name="applauncherd__test_single_instance_windowless_w_invoker" type="Functional" description="Test that error reported for second start of windowless single instance application" timeout="360" level="System" insignificant="false">
          <step expected_result="0">source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-single-instance.py test_single_instance_windowless_w_invoker</step>
      </case>
      <post_steps>
          <step>source /tmp/session_bus_address.user; DISPLAY=:0  `pyversions -d` /usr/share/applauncherd-testscripts/test-func-launcher.py start_daemons</step>
          <step>rm -f /root/.itm</step> <!--Disable test mode for invoker -->
      </post_steps>
      <environments>
          <scratchbox>false</scratchbox>
          <hardware>true</hardware>    
      </environments>
    </set>
  </suite>
</testdefinition>


